{
  "1": "(\\sum int i; 1 <= i && i <= \\old(size); \\old(elements[i].isReferenced()) ? 1 : 0)",
  "2": "setElementData(++newSize, obj);",
  "3": "Object[] elements = getElementData();\n        MyObject aim = null;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= getSize(); ++i) {\n            MyObject obj = ((MyObject) elements[i]);\n            if (obj != null && obj.isReferenced() && obj.getId() < min) {\n                min = obj.getId();\n                aim = obj;\n            }\n        }\n        return aim;",
  "4-1": "heap;",
  "4-2": "count + \\old(size) < DEFAULT_CAPACITY;",
  "4-3": "size < DEFAULT_CAPACITY;",
  "4-4": "(\\forall int i; 1 <= i && i <= \\old(size);\n      @          (\\old(elements[i]) != null) ==>\n      @           (\\exists int j; 1 <= j && j <= size; elements[j].equals(\\old(getElement(i)))));",
  "4-5": "count + \\old(size) >= DEFAULT_CAPACITY;",
  "4-6": "size = \\old(size);",
  "4-7": "(\\forall int i; 1 <= i && i <= \\old(size);\n      @                  \\old(elements[i].isReferenced) ==>\n      @                  (\\exists int j; 1 <= j && j <= size; elements[j].equals(\\old(getElement(i)))));",
  "4-8": "(\\forall int i; 1 <= i && i <= \\old(size);\n      @                  \\old(!elements[i].isReferenced) ==>\n      @                  (\\forall int j; 1 <= j && j <= size; !elements[j].equals(\\old(getElement(i)))));"
}